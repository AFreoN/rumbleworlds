{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nvar GA4ReactGlobalIndex = '__ga4React__';\n/**\r\n * @desc class required to manage google analitycs 4\r\n * @class GA4React\r\n *  */\n\nclass GA4React {\n  constructor(gaCode, gaConfig, additionalGaCode, timeout, options) {\n    this.gaCode = gaCode;\n    this.gaConfig = gaConfig;\n    this.additionalGaCode = additionalGaCode;\n    this.timeout = timeout;\n    this.options = options;\n    this.scriptSyncId = 'ga4ReactScriptSync';\n    this.scriptAsyncId = 'ga4ReactScriptAsync';\n    this.nonceAsync = '';\n    this.nonceSync = '';\n    this.gaConfig = gaConfig ? gaConfig : {};\n    this.gaCode = gaCode;\n    this.timeout = timeout || 5000;\n    this.additionalGaCode = additionalGaCode;\n    this.options = options;\n    if (this.options) {\n      var {\n        nonce\n      } = this.options;\n      this.nonceAsync = nonce && nonce[0] ? nonce[0] : '';\n      this.nonceSync = nonce && nonce[1] ? nonce[1] : '';\n    }\n  }\n  /**\r\n   * @desc output on resolve initialization\r\n   */\n\n  outputOnResolve() {\n    return {\n      pageview: this.pageview,\n      event: this.event,\n      gtag: this.gtag\n    };\n  }\n  /**\r\n   * @desc Return main function for send ga4 events, pageview etc\r\n   * @returns {Promise<GA4ReactResolveInterface>}\r\n   */\n\n  initialize() {\n    return new Promise((resolve, reject) => {\n      if (GA4React.isInitialized()) {\n        reject(new Error('GA4React is being initialized'));\n      } // in case of retry logics, remove previous scripts\n\n      var previousScriptAsync = document.getElementById(this.scriptAsyncId);\n      if (previousScriptAsync) {\n        previousScriptAsync.remove();\n      }\n      var head = document.getElementsByTagName('head')[0];\n      var scriptAsync = document.createElement('script');\n      scriptAsync.setAttribute('id', this.scriptAsyncId);\n      scriptAsync.setAttribute('async', '');\n      if (this.nonceAsync && typeof this.nonceAsync === 'string' && this.nonceAsync.length > 0) {\n        scriptAsync.setAttribute('nonce', this.nonceAsync);\n      }\n      scriptAsync.setAttribute('src', \"https://www.googletagmanager.com/gtag/js?id=\" + this.gaCode);\n      scriptAsync.onload = () => {\n        var target = document.getElementById(this.scriptSyncId);\n        if (target) {\n          target.remove();\n        } // in case of retry logics, remove previous script sync\n\n        var previousScriptSync = document.getElementById(this.scriptSyncId);\n        if (previousScriptSync) {\n          previousScriptSync.remove();\n        }\n        var scriptSync = document.createElement('script');\n        scriptSync.setAttribute('id', this.scriptSyncId);\n        if (this.nonceSync && typeof this.nonceSync === 'string' && this.nonceSync.length > 0) {\n          scriptSync.setAttribute('nonce', this.nonceSync);\n        }\n        var scriptHTML = \"window.dataLayer = window.dataLayer || [];\\n        function gtag(){dataLayer.push(arguments);};\\n        gtag('js', new Date());\\n        gtag('config', '\" + this.gaCode + \"', \" + JSON.stringify(this.gaConfig) + \");\";\n        if (this.additionalGaCode) {\n          this.additionalGaCode.forEach(code => {\n            scriptHTML += \"\\ngtag('config', '\" + code + \"', \" + JSON.stringify(this.gaConfig) + \");\";\n          });\n        }\n        scriptSync.innerHTML = scriptHTML;\n        head.appendChild(scriptSync);\n        var resolved = this.outputOnResolve();\n        Object.assign(window, {\n          [GA4ReactGlobalIndex]: resolved\n        });\n        resolve(resolved);\n      };\n      scriptAsync.onerror = event => {\n        if (typeof event === 'string') {\n          reject(\"GA4React intialization failed \" + event);\n        } else {\n          var error = new Error();\n          error.name = 'GA4React intialization failed';\n          error.message = JSON.stringify(event, ['message', 'arguments', 'type', 'name']);\n          reject(error);\n        }\n      };\n      var onChangeReadyState = () => {\n        switch (document.readyState) {\n          case 'interactive':\n          case 'complete':\n            if (!GA4React.isInitialized()) {\n              head.appendChild(scriptAsync);\n              document.removeEventListener('readystatechange', onChangeReadyState);\n            }\n            break;\n        }\n      };\n      if (document.readyState !== 'complete') {\n        document.addEventListener('readystatechange', onChangeReadyState);\n      } else {\n        onChangeReadyState();\n      }\n      setTimeout(() => {\n        reject(new Error('GA4React Timeout'));\n      }, this.timeout);\n    });\n  }\n  /**\r\n   * @desc send pageview event to gtag\r\n   * @param path\r\n   */\n\n  pageview(path, location, title) {\n    return this.gtag('event', 'page_view', {\n      page_path: path,\n      page_location: location || window.location,\n      page_title: title || document.title\n    });\n  }\n  /**\r\n   * @desc set event and send to gtag\r\n   * @param action\r\n   * @param label\r\n   * @param category\r\n   * @param nonInteraction\r\n   */\n\n  event(action, label, category, nonInteraction) {\n    if (nonInteraction === void 0) {\n      nonInteraction = false;\n    }\n    return this.gtag('event', action, {\n      event_label: label,\n      event_category: category,\n      non_interaction: nonInteraction\n    });\n  }\n  /**\r\n   * @desc direct access to gtag\r\n   * @param args\r\n   */\n\n  gtag() {\n    //@ts-ignore\n    return window.gtag(...arguments);\n  }\n  /**\r\n   * @desc ga is initialized?\r\n   */\n\n  static isInitialized() {\n    switch (typeof window[GA4ReactGlobalIndex] !== 'undefined') {\n      case true:\n        return true;\n      default:\n        return false;\n    }\n  }\n  /**\r\n   * @desc get ga4react from global\r\n   */\n\n  static getGA4React() {\n    if (GA4React.isInitialized()) {\n      return window[GA4ReactGlobalIndex];\n    } else {\n      console.error(new Error('GA4React is not initialized'));\n    }\n  }\n}\nvar outputGA4 = (children, setComponents, ga4) => {\n  setComponents(React.Children.map(children, (child, index) => {\n    if (!React.isValidElement(child)) {\n      return React.createElement(React.Fragment, null, child);\n    } //@ts-ignore\n\n    if (child.type && typeof child.type.name !== 'undefined') {\n      return React.cloneElement(child, {\n        //@ts-ignore\n        ga4: ga4,\n        index\n      });\n    } else {\n      return child;\n    }\n  }));\n};\nvar GA4R = _ref => {\n  var {\n    code,\n    timeout,\n    config,\n    additionalCode,\n    children,\n    options\n  } = _ref;\n  var [components, setComponents] = useState(null);\n  useEffect(() => {\n    if (!GA4React.isInitialized()) {\n      var ga4manager = new GA4React(\"\" + code, config, additionalCode, timeout, options);\n      ga4manager.initialize().then(ga4 => {\n        outputGA4(children, setComponents, ga4);\n      }, err => {\n        console.error(err);\n      });\n    } else {\n      var ga4 = GA4React.getGA4React();\n      if (ga4) {\n        outputGA4(children, setComponents, ga4);\n      }\n    }\n  }, []);\n  return React.createElement(React.Fragment, null, components);\n};\nvar useGA4React = (gaCode, gaConfig, gaAdditionalCode, gaTimeout, options) => {\n  var [ga4, setGA4] = useState(undefined);\n  useEffect(() => {\n    if (gaCode) {\n      switch (GA4React.isInitialized()) {\n        case false:\n          var ga4react = new GA4React(\"\" + gaCode, gaConfig, gaAdditionalCode, gaTimeout, options);\n          ga4react.initialize().then(ga4 => {\n            setGA4(ga4);\n          }, err => {\n            console.error(err);\n          });\n          break;\n        case true:\n          setGA4(GA4React.getGA4React());\n          break;\n      }\n    } else {\n      setGA4(GA4React.getGA4React());\n    }\n  }, [gaCode]);\n  return ga4;\n};\nfunction withTracker(MyComponent) {\n  return props => {\n    var {\n      path,\n      location,\n      title,\n      gaCode,\n      gaTimeout,\n      gaConfig,\n      gaAdditionalCode,\n      options\n    } = props;\n    useEffect(() => {\n      switch (GA4React.isInitialized()) {\n        case true:\n          var ga4 = GA4React.getGA4React();\n          if (ga4) {\n            ga4.pageview(path, location, title);\n          }\n          break;\n        default:\n        case false:\n          var ga4react = new GA4React(\"\" + gaCode, gaConfig, gaAdditionalCode, gaTimeout, options);\n          ga4react.initialize().then(ga4 => {\n            ga4.pageview(path, location, title);\n          }, err => {\n            console.error(err);\n          });\n          break;\n      }\n    });\n    return React.createElement(MyComponent, Object.assign({}, props));\n  };\n}\nexport default GA4React;\nexport { GA4R, GA4React, useGA4React, withTracker };","map":{"version":3,"sources":["../src/lib/ga4manager.tsx","../src/components/GA4RComponents.tsx","../src/hooks/useGA4React.tsx","../src/components/withTracker.tsx"],"names":["GA4ReactGlobalIndex","GA4React","constructor","gaConfig","gaCode","timeout","additionalGaCode","options","nonce","nonceAsync","nonceSync","outputOnResolve","pageview","event","gtag","initialize","Promise","resolve","reject","isInitialized","Error","previousScriptAsync","document","getElementById","scriptAsyncId","remove","head","getElementsByTagName","scriptAsync","createElement","setAttribute","length","onload","target","scriptSyncId","previousScriptSync","scriptSync","scriptHTML","JSON","stringify","forEach","code","innerHTML","appendChild","resolved","Object","assign","window","onerror","error","name","message","onChangeReadyState","readyState","removeEventListener","addEventListener","setTimeout","path","location","title","page_path","page_location","page_title","action","label","category","nonInteraction","event_label","event_category","non_interaction","getGA4React","console","outputGA4","children","setComponents","ga4","Children","map","child","index","React","isValidElement","Fragment","type","cloneElement","GA4R","config","additionalCode","components","useState","useEffect","ga4manager","then","err","useGA4React","gaAdditionalCode","gaTimeout","setGA4","undefined","ga4react","withTracker","MyComponent","props"],"mappings":"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","sourcesContent":["import {\n  GA4Config,\n  GA4ManagerOptionsInterface,\n  GA4ReactInterface,\n  GA4ReactResolveInterface,\n  gtagAction,\n  gtagCategory,\n  gtagFunction,\n  gtagLabel,\n} from '../models/gtagModels';\n\nexport const GA4ReactGlobalIndex = '__ga4React__';\n\ndeclare global {\n  interface Window {\n    gtag: gtagFunction | Function;\n    __ga4React__: GA4ReactResolveInterface;\n  }\n}\n\n/**\n * @desc class required to manage google analitycs 4\n * @class GA4React\n *  */\nexport class GA4React implements GA4ReactInterface {\n  private scriptSyncId: string = 'ga4ReactScriptSync';\n  private scriptAsyncId: string = 'ga4ReactScriptAsync';\n  private nonceAsync: string = '';\n  private nonceSync: string = '';\n  constructor(\n    private gaCode: string,\n    private gaConfig?: GA4Config,\n    private additionalGaCode?: Array<string>,\n    private timeout?: number,\n    private options?: GA4ManagerOptionsInterface\n  ) {\n    this.gaConfig = gaConfig ? gaConfig : {};\n    this.gaCode = gaCode;\n    this.timeout = timeout || 5000;\n    this.additionalGaCode = additionalGaCode;\n    this.options = options;\n\n    if (this.options) {\n      const { nonce } = this.options;\n      this.nonceAsync = nonce && nonce[0] ? nonce[0] : '';\n      this.nonceSync = nonce && nonce[1] ? nonce[1] : '';\n    }\n  }\n\n  /**\n   * @desc output on resolve initialization\n   */\n  private outputOnResolve(): GA4ReactResolveInterface {\n    return {\n      pageview: this.pageview,\n      event: this.event,\n      gtag: this.gtag,\n    };\n  }\n\n  /**\n   * @desc Return main function for send ga4 events, pageview etc\n   * @returns {Promise<GA4ReactResolveInterface>}\n   */\n  public initialize(): Promise<GA4ReactResolveInterface> {\n    return new Promise((resolve, reject) => {\n      if (GA4React.isInitialized()) {\n        reject(new Error('GA4React is being initialized'));\n      }\n\n      // in case of retry logics, remove previous scripts\n      const previousScriptAsync = document.getElementById(this.scriptAsyncId);\n      if (previousScriptAsync) {\n        previousScriptAsync.remove();\n      }\n\n      const head: HTMLHeadElement = document.getElementsByTagName('head')[0];\n      const scriptAsync: HTMLScriptElement = document.createElement('script');\n      scriptAsync.setAttribute('id', this.scriptAsyncId);\n      scriptAsync.setAttribute('async', '');\n\n      if (\n        this.nonceAsync &&\n        typeof this.nonceAsync === 'string' &&\n        this.nonceAsync.length > 0\n      ) {\n        scriptAsync.setAttribute('nonce', this.nonceAsync);\n      }\n\n      scriptAsync.setAttribute(\n        'src',\n        `https://www.googletagmanager.com/gtag/js?id=${this.gaCode}`\n      );\n      scriptAsync.onload = () => {\n        const target: HTMLElement | null = document.getElementById(\n          this.scriptSyncId\n        );\n        if (target) {\n          target.remove();\n        }\n\n        // in case of retry logics, remove previous script sync\n        const previousScriptSync = document.getElementById(this.scriptSyncId);\n        if (previousScriptSync) {\n          previousScriptSync.remove();\n        }\n\n        const scriptSync: HTMLScriptElement = document.createElement('script');\n\n        scriptSync.setAttribute('id', this.scriptSyncId);\n\n        if (\n          this.nonceSync &&\n          typeof this.nonceSync === 'string' &&\n          this.nonceSync.length > 0\n        ) {\n          scriptSync.setAttribute('nonce', this.nonceSync);\n        }\n\n        let scriptHTML: string = `window.dataLayer = window.dataLayer || [];\n        function gtag(){dataLayer.push(arguments);};\n        gtag('js', new Date());\n        gtag('config', '${this.gaCode}', ${JSON.stringify(this.gaConfig)});`;\n\n        if (this.additionalGaCode) {\n          this.additionalGaCode.forEach((code: string) => {\n            scriptHTML += `\\ngtag('config', '${code}', ${JSON.stringify(\n              this.gaConfig\n            )});`;\n          });\n        }\n\n        scriptSync.innerHTML = scriptHTML;\n\n        head.appendChild(scriptSync);\n\n        const resolved: GA4ReactResolveInterface = this.outputOnResolve();\n\n        Object.assign(window, { [GA4ReactGlobalIndex]: resolved });\n\n        resolve(resolved);\n      };\n\n      scriptAsync.onerror = (event: Event | string): void => {\n        if (typeof event === 'string') {\n          reject(`GA4React intialization failed ${event}`);\n        } else {\n          const error = new Error();\n          error.name = 'GA4React intialization failed';\n          error.message = JSON.stringify(event, [\n            'message',\n            'arguments',\n            'type',\n            'name',\n          ]);\n          reject(error);\n        }\n      };\n\n      const onChangeReadyState = () => {\n        switch (document.readyState) {\n          case 'interactive':\n          case 'complete':\n            if (!GA4React.isInitialized()) {\n              head.appendChild(scriptAsync);\n              document.removeEventListener(\n                'readystatechange',\n                onChangeReadyState\n              );\n            }\n            break;\n        }\n      };\n\n      if (document.readyState !== 'complete') {\n        document.addEventListener('readystatechange', onChangeReadyState);\n      } else {\n        onChangeReadyState();\n      }\n\n      setTimeout(() => {\n        reject(new Error('GA4React Timeout'));\n      }, this.timeout);\n    });\n  }\n\n  /**\n   * @desc send pageview event to gtag\n   * @param path\n   */\n  public pageview(\n    path: string | Location,\n    location?: string | Location,\n    title?: string\n  ): any {\n    return this.gtag('event', 'page_view', {\n      page_path: path,\n      page_location: location || window.location,\n      page_title: title || document.title,\n    });\n  }\n\n  /**\n   * @desc set event and send to gtag\n   * @param action\n   * @param label\n   * @param category\n   * @param nonInteraction\n   */\n  public event(\n    action: gtagAction,\n    label: gtagLabel,\n    category: gtagCategory,\n    nonInteraction: boolean = false\n  ): any {\n    return this.gtag('event', action, {\n      event_label: label,\n      event_category: category,\n      non_interaction: nonInteraction,\n    });\n  }\n\n  /**\n   * @desc direct access to gtag\n   * @param args\n   */\n  public gtag(...args: any): any {\n    //@ts-ignore\n    return window.gtag(...args);\n  }\n\n  /**\n   * @desc ga is initialized?\n   */\n  static isInitialized(): boolean {\n    switch (typeof window[GA4ReactGlobalIndex] !== 'undefined') {\n      case true:\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * @desc get ga4react from global\n   */\n  static getGA4React(): GA4ReactResolveInterface | void {\n    if (GA4React.isInitialized()) {\n      return window[GA4ReactGlobalIndex];\n    } else {\n      console.error(new Error('GA4React is not initialized'));\n    }\n  }\n}\n\nexport default GA4React;\n","import React, { useState, useEffect } from 'react';\nimport GA4React from './../lib/ga4manager';\nimport {\n  GA4Config,\n  GA4ManagerOptionsInterface,\n  GA4ReactResolveInterface,\n} from '../models/gtagModels';\n\nexport interface IGA4R {\n  code: string;\n  timeout?: number;\n  config?: GA4Config;\n  additionalCode?: Array<string>;\n  children?: any;\n  options?: GA4ManagerOptionsInterface;\n}\n\nconst outputGA4 = (\n  children: any,\n  setComponents: Function,\n  ga4: GA4ReactResolveInterface\n) => {\n  setComponents(\n    React.Children.map(children, (child: React.ReactChildren, index) => {\n      if (!React.isValidElement(child)) {\n        return <React.Fragment>{child}</React.Fragment>;\n      }\n\n      //@ts-ignore\n      if (child.type && typeof child.type.name !== 'undefined') {\n        return React.cloneElement(child, {\n          //@ts-ignore\n          ga4: ga4,\n          index,\n        });\n      } else {\n        return child;\n      }\n    })\n  );\n};\n\nexport const GA4R: React.FC<IGA4R> = ({\n  code,\n  timeout,\n  config,\n  additionalCode,\n  children,\n  options,\n}) => {\n  const [components, setComponents] = useState<any>(null);\n\n  useEffect(() => {\n    if (!GA4React.isInitialized()) {\n      const ga4manager = new GA4React(\n        `${code}`,\n        config,\n        additionalCode,\n        timeout,\n        options\n      );\n      ga4manager.initialize().then(\n        (ga4: GA4ReactResolveInterface) => {\n          outputGA4(children, setComponents, ga4);\n        },\n        err => {\n          console.error(err);\n        }\n      );\n    } else {\n      const ga4 = GA4React.getGA4React();\n      if (ga4) {\n        outputGA4(children, setComponents, ga4);\n      }\n    }\n  }, []);\n\n  return <>{components}</>;\n};\n\nexport default GA4R;\n","import { useState, useEffect } from 'react';\nimport GA4React from '../lib/ga4manager';\n\nimport {\n  GA4Config,\n  GA4ManagerOptionsInterface,\n  GA4ReactResolveInterface,\n} from '../models/gtagModels';\n\nexport const useGA4React = (\n  gaCode?: string,\n  gaConfig?: GA4Config | object,\n  gaAdditionalCode?: Array<string>,\n  gaTimeout?: number,\n  options?: GA4ManagerOptionsInterface\n): GA4ReactResolveInterface | void => {\n  const [ga4, setGA4] = useState<GA4ReactResolveInterface | void>(undefined);\n  useEffect(() => {\n    if (gaCode) {\n      switch (GA4React.isInitialized()) {\n        case false:\n          const ga4react = new GA4React(\n            `${gaCode}`,\n            gaConfig,\n            gaAdditionalCode,\n            gaTimeout,\n            options\n          );\n          ga4react.initialize().then(\n            (ga4: GA4ReactResolveInterface) => {\n              setGA4(ga4);\n            },\n            (err: Error) => {\n              console.error(err);\n            }\n          );\n          break;\n        case true:\n          setGA4(GA4React.getGA4React());\n          break;\n      }\n    } else {\n      setGA4(GA4React.getGA4React());\n    }\n  }, [gaCode]);\n  return ga4;\n};\n","import React, { useEffect } from 'react';\nimport GA4React from '../lib/ga4manager';\n\nimport {\n  GA4Config,\n  GA4ManagerOptionsInterface,\n  GA4ReactResolveInterface,\n} from '../models/gtagModels';\n\nexport interface GA4WithTrackerComponentInterface {\n  path: string | Location;\n  location?: string | Location;\n  title?: string;\n  gaCode?: string;\n  gaConfig?: GA4Config | object;\n  additionalCode?: Array<string>;\n  timeout?: number;\n  options?: GA4ManagerOptionsInterface;\n}\n\nexport function withTracker(\n  MyComponent: React.FC<any>\n): React.FC<GA4WithTrackerComponentInterface> {\n  return (props: GA4WithTrackerComponentInterface & any) => {\n    const {\n      path,\n      location,\n      title,\n      gaCode,\n      gaTimeout,\n      gaConfig,\n      gaAdditionalCode,\n      options,\n    } = props;\n    useEffect(() => {\n      switch (GA4React.isInitialized()) {\n        case true:\n          const ga4 = GA4React.getGA4React();\n          if (ga4) {\n            ga4.pageview(path, location, title);\n          }\n          break;\n        default:\n        case false:\n          const ga4react = new GA4React(\n            `${gaCode}`,\n            gaConfig,\n            gaAdditionalCode,\n            gaTimeout,\n            options\n          );\n          ga4react.initialize().then(\n            (ga4: GA4ReactResolveInterface) => {\n              ga4.pageview(path, location, title);\n            },\n            (err: Error) => {\n              console.error(err);\n            }\n          );\n          break;\n      }\n    });\n    return <MyComponent {...props} />;\n  };\n}\n\nexport default withTracker;\n"]},"metadata":{},"sourceType":"module"}