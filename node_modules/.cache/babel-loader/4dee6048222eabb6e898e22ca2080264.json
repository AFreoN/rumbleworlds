{"ast":null,"code":"import{useRef,useEffect}from\"react\";import*as THREE from\"three\";// import { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader.js\";\nimport{GLTFLoader}from\"three/examples/jsm/loaders/GLTFLoader.js\";import solarmyModel from\"assets/home/characters/solarmy_nonTex.glb\";import solarmyDiffuse from\"assets/home/characters/Textures/solarmy_diffuse512.png\";import solienModel from\"assets/home/characters/solien_nonTex.glb\";import solienDiffuse from\"assets/home/characters/Textures/solien_diffuse512.png\";import sunkModel from\"assets/home/characters/sunk_nonTex.glb\";import sunkDiffuse from\"assets/home/characters/Textures/sunk_diffuse512.png\";// import rumblerModel from \"assets/home/characters/rumbler.glb\";\n// import rumblerModel from \"assets/home/characters/rumbler_cyclops_2048.glb\";\n// import rumblerModel from \"assets/home/characters/rumbler_cyclops_1024.glb\";\n// import rumblerModel from \"assets/home/characters/rumbler_cyclops_1024_512acc.glb\";\nimport rumblerModel from\"assets/home/characters/rumbler_tex512.glb\";//rumbler_cyclops_256yellow_512all.glb\nimport solarianModel from\"assets/home/characters/solarian_nonTex.glb\";//solarian.glb\nimport solarianDiffuse from\"assets/home/characters/Textures/solarian_diffuse512.jpg\";import{EffectComposer}from'three/examples/jsm/postprocessing/EffectComposer.js';import{RenderPass}from'three/examples/jsm/postprocessing/RenderPass.js';import{OutlinePass}from'three/examples/jsm/postprocessing/OutlinePass.js';// import { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js';\n// import { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader.js';\n// import solarmy_texture from \"assets/home/characters/solarmy_texture.png\";\nimport Solarmy_metalroughness_texture from\"assets/home/characters/Solarmy_MetalRoughMap.png\";import Sunk_metalroughness_texture from\"assets/home/characters/Sunk_MetalRoughness.png\";// import solien_texture from \"assets/home/characters/solien_texture.png\";\n// import sunk_texture from \"assets/home/characters/sunk_texture.png\";\nimport\"./characters.scss\";import{useSelector}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";let mixers=[];let camera;const manager=new THREE.LoadingManager();// load model\n//const loader = new FBXLoader(manager);\nconst gltfloader=new GLTFLoader(manager);const textureLoader=new THREE.TextureLoader(manager);const clock=new THREE.Clock();const renderer=new THREE.WebGLRenderer({alpha:true});renderer.setClearColor(0x000000,0);var composer;var selectedObjects=[];let scene;let characterList=[];let solarmy,solien,sunk,rumbler,solarian;var isPostProcessEnabled=false;const characterCount=5;var loadedCount=0;var modelsLoaded=false;export var firstFrameRendered=false;function setupScene(){scene=new THREE.Scene();//   camera.position.multiplyScalar(30);\n//   camera.rotation.set(50, 0, 0);\nrenderer.toneMapping=THREE.ReinhardToneMapping;renderer.toneMappingExposure=1;renderer.shadowMap.enabled=true;// renderer.outputEncoding = THREE.sRGBEncoding;\n// renderer.setClearColor(0xffffff, 0);\n// scene.background = new THREE.Color(0x999999);\n// scene.background = new THREE.Color().setHSL(0.6, 0, 1);\n// document.body.appendChild( renderer.domElement );\n// use ref as a mount point of the Three.js scene instead of the document.body\n// add light\n// scene.fog = new THREE.Fog(0xa0a0a0, 1, 2000);\nscene.fog=new THREE.Fog(scene.background,1,20000);const hemiLight=new THREE.HemisphereLight(0xffffff,0x444444,1);hemiLight.position.set(0,2,0);hemiLight.position.multiplyScalar(1000000);// hemiLight.color.setHSL(0.6, 0.6, 0.6);\n// hemiLight.groundColor.setHSL(0.095, 1, 0.75);\n//scene.add(hemiLight);\n// add to show light helper\nconst dirLight=new THREE.DirectionalLight(0xFFF6B6,10);//prev 1.5 in default tone mapping\ndirLight.color.setHSL(0.1,1,0.95);dirLight.position.multiplyScalar(30);const d=200;dirLight.position.set(-2,2,4);//prev (1, 2, 1)\ndirLight.position.multiplyScalar(1000);dirLight.castShadow=true;dirLight.shadow.camera.top=d;dirLight.shadow.camera.bottom=-d;dirLight.shadow.camera.left=-d;dirLight.shadow.camera.right=d;// dirLight.shadow.camera.near = 0.1;\n// dirLight.shadow.camera.far = 100;\ndirLight.shadow.camera.far=35000;dirLight.shadow.bias=-0.0001;scene.add(dirLight);const spotLight=new THREE.SpotLight(0xaa0000);spotLight.position.set(-10,10,-5);//scene.add( spotLight );\n// const redPointLightRadius = 15;   //5\n// const redpointLight = new THREE.PointLight( 0xff0000, redPointLightRadius , 40 );\n// redpointLight.position.set( -7, 1, -1 );\n// scene.add( redpointLight );\nconst rimLightSize=30;//8\nconst rimPointLight=new THREE.PointLight(0x0033FF,rimLightSize,40);rimPointLight.position.set(10,2,0);scene.add(rimPointLight);const ambientLight=new THREE.AmbientLight(0xffffff,0);// soft white light\nscene.add(ambientLight);renderer.domElement.style.display=\"none\";// add to show light helper\n// const dirLightHelper = new THREE.DirectionalLightHelper(dirLight, 10);\n// scene.add(dirLightHelper);\n// const groundGeo = new THREE.PlaneGeometry(100000, 100000);\n// const groundMat = new THREE.MeshLambertMaterial({ color: 0xffffff });\n// groundMat.color.setHSL(0.095, 1, 0.75);\n// const ground = new THREE.Mesh(groundGeo, groundMat);\n// ground.rotation.x = -Math.PI / 2;\n// ground.receiveShadow = true;\n// scene.add(ground);\nLoadModels();}function setupPostProcessing(width,height){if(isPostProcessEnabled){return;}const params={edgeStrength:5.0,//3\nedgeGlow:0.0,//0\nedgeThickness:1.0,//1\npulsePeriod:0,rotate:false,usePatternTexture:false};composer=new EffectComposer(renderer);const renderPass=new RenderPass(scene,camera);composer.addPass(renderPass);const outlinePass=new OutlinePass(new THREE.Vector2(width,height),scene,camera);outlinePass.edgeStrength=params.edgeStrength;outlinePass.edgeGlow=params.edgeGlow;outlinePass.edgeThickness=params.edgeThickness;outlinePass.visibleEdgeColor.set(0x000000);outlinePass.hiddenEdgeColor.set(0x111111);outlinePass.selectedObjects=selectedObjects;composer.addPass(outlinePass);isPostProcessEnabled=true;}function LoadModels(){gltfloader.load(rumblerModel,function(object){rumbler=object.scene;// console.log(\"rumbler loaded\");\nconst mixer=new THREE.AnimationMixer(rumbler);const action=mixer.clipAction(object.animations[0]);action.play();mixers.push(mixer);selectedObjects.push(rumbler);rumbler.traverse(child=>{if(child.isMesh){child.castShadow=true;child.receiveShadow=true;}});// selectedObjects.traverse((obj) => {\n//   console.log('traversed properly');\n// })\n// const tgaLoader = new TGALoader(manager);\n// const texture1 = tgaLoader.load(rumbler_cyclops_base_color);\n// const texture2 = tgaLoader.load(rumbler_cyclops_texture);\n// rumbler.traverse(function (child) {\n//   if (child.isMesh) {\n//     child.castShadow = true;\n//     child.receiveShadow = true;\n//     child.material.map = texture1;\n//     child.material.needsUpdate = true;\n//     if (\n//       child.name.includes(\"Metal\") ||\n//       child.name.includes(\"Armor\") ||\n//       child.name.includes(\"Thumb\") ||\n//       child.name.includes(\"ShoulderPad\") ||\n//       child.name.includes(\"Index\") ||\n//       child.name.includes(\"Pinky\")\n//     ) {\n//       var x = child.material.clone();\n//       x.map = texture2;\n//       x.needsUpdate = true;\n//       child.material = x;\n//     }\n//   }\n// });\n// rumbler.rotation.set(0, -50, 0);\n// rumbler.rotation.set(0, 1, 0);\nrumbler.position.x=-0.5;rumbler.position.y=-1.25;rumbler.rotation.y=0.3;rumbler.scale.set(13,13,13);//prev 11\n// rumbler.visible = false; \nscene.add(rumbler);characterList.push(rumbler);mLoaded();});LoadRemainingModels();}function LoadRemainingModels(){gltfloader.load(solarmyModel,function(object){solarmy=object.scene;// console.log('solarmy loaded');\nconst mixer=new THREE.AnimationMixer(solarmy);const action=mixer.clipAction(object.animations[0]);mixers.push(mixer);action.play();selectedObjects.push(solarmy);const solarmyLoadManager=new THREE.LoadingManager();const solarmyTexLoader=new THREE.TextureLoader(solarmyLoadManager);// const solarmyTexLoader2 = new THREE.TextureLoader(solarmyLoadManager);\nvar diffuseTexture,roughmetalTexture;solarmyTexLoader.load(Solarmy_metalroughness_texture,texture=>{texture.flipY=false;texture.needsUpdate=true;roughmetalTexture=texture;});solarmyTexLoader.load(solarmyDiffuse,texture=>{texture.flipY=false;texture.encoding=THREE.sRGBEncoding;texture.needsUpdate=true;diffuseTexture=texture;});solarmyLoadManager.onLoad=()=>{solarmy.traverse(function(child){if(child.isMesh){child.castShadow=true;child.receiveShadow=true;// child.material.roughness = 0;\nchild.material.roughness=0.9;child.material.metalness=1;child.material.metalnessMap=roughmetalTexture;child.material.roughnessMap=roughmetalTexture;child.material.map=diffuseTexture;child.material.needsUpdate=true;// textureLoader.load(Solarmy_metalroughness_texture, (texture) => {\n//   texture.flipY = false;\n//   texture.needsUpdate = true;\n//   child.material.metalnessMap = texture;\n//   child.material.roughnessMap = texture;\n//   child.material.needsUpdate = true;\n// });\n// textureLoader.load(solarmyDiffuse, (texture) => {\n//   texture.flipY = false;\n//   texture.encoding = THREE.sRGBEncoding;\n//   texture.needsUpdate = true;\n//   child.material.map = texture;\n//   child.material.needsUpdate = true;\n// })\n}});mLoaded();};solarmy.position.set(-0.5,-1.5,0);solarmy.rotation.set(0,0,0);solarmy.scale.set(3.6,3.6,3.6);//prev 3\nsolarmy.name=\"solarmy\";characterList.push(solarmy);});gltfloader.load(solienModel,function(object){solien=object.scene;// console.log('solien loaded');\nconst mixer=new THREE.AnimationMixer(solien);const action=mixer.clipAction(object.animations[0]);action.play();mixers.push(mixer);selectedObjects.push(solien);textureLoader.load(solienDiffuse,texture=>{texture.flipY=false;texture.encoding=THREE.sRGBEncoding;solien.traverse(function(child){if(child.isMesh){child.castShadow=true;child.receiveShadow=true;child.material.roughness=0.7;child.material.metalness=0.1;child.material.map=texture;child.material.needsUpdate=true;}});// child.material.side = THREE.DoubleSide;\n// child.material.dithering = true;\nmLoaded();});solien.position.set(-0.5,-1.5,-0.6);//prev (0, 0.5, -0.6)\nsolien.rotation.set(0,Math.PI*0.25,0);solien.scale.set(2,2,2);//prev (1.6, 1.6, 1.6)\n// solien.visible = false;\ncharacterList.push(solien);});gltfloader.load(sunkModel,function(object){sunk=object.scene;// console.log('sunk loaded');\nconst mixer=new THREE.AnimationMixer(sunk);const action=mixer.clipAction(object.animations[0]);action.play();mixers.push(mixer);selectedObjects.push(sunk);const sunkLoadManager=new THREE.LoadingManager();const sunkTexLoader1=new THREE.TextureLoader(sunkLoadManager);const sunkTexLoader2=new THREE.TextureLoader(sunkLoadManager);var sunkRoughnessTexture,sunkDiffuseTexture;sunkTexLoader1.load(Sunk_metalroughness_texture,texture=>{texture.flipY=false;texture.encoding=THREE.sRGBEncoding;texture.needsUpdate=true;sunkRoughnessTexture=texture;});sunkTexLoader2.load(sunkDiffuse,texture=>{texture.flipY=false;texture.encoding=THREE.sRGBEncoding;texture.needsUpdate=true;sunkDiffuseTexture=texture;});sunkLoadManager.onLoad=()=>{sunk.traverse(function(child){if(child.isMesh){child.material.roughness=0.9;child.material.metalness=0.7;child.material.metalnessMap=sunkRoughnessTexture;child.material.roughnessMap=sunkRoughnessTexture;child.material.map=sunkDiffuseTexture;child.material.needsUpdate=true;// textureLoader.load(Sunk_metalroughness_texture, (texture) => {\n//   texture.flipY = false;\n//   texture.needsUpdate = true;\n//   child.material.metalnessMap = texture;\n//   child.material.roughnessMap = texture;\n//   child.material.needsUpdate = true;\n// });\n// textureLoader.load(sunkDiffuse, (texture) => {\n//   texture.flipY = false;\n//   texture.encoding = THREE.sRGBEncoding;\n//   child.material.map = texture;\n//   child.material.needsUpdate = true;\n// })\n}});mLoaded();};// sunk.rotation.set(0, -50, 0);\nsunk.rotation.set(THREE.MathUtils.degToRad(5),Math.PI*0.1,0);sunk.position.set(-0.5,-2.7,-1.2);//prev (0,-0.5,-1)\nconst scale=1.2;//1.2\nsunk.scale.set(scale,scale,scale);//prev (1.2, 1.2, 1.2)\n// sunk.visible = false;\ncharacterList.push(sunk);});gltfloader.load(solarianModel,function(object){solarian=object.scene;const mixer=new THREE.AnimationMixer(solarian);const action=mixer.clipAction(object.animations[0]);action.play();mixers.push(mixer);selectedObjects.push(solarian);// console.log('solarian loaded');\nvar diffuseMap;textureLoader.load(solarianDiffuse,texture=>{texture.flipY=false;texture.encoding=THREE.sRGBEncoding;texture.needsUpdate=true;diffuseMap=texture;solarian.traverse(function(child){if(child.isMesh){child.castShadow=true;child.receiveShadow=true;child.material.map=diffuseMap;child.material.roughness=0.4;child.material.metalness=0.2;child.material.needsUpdate=true;// textureLoader.load(solarian_texture, (texture) => {\n//   child.material.map = texture;\n//   child.material.needsUpdate = true;\n// });\n}});mLoaded();});// solarian.rotation.set(0, -50, 0);\nsolarian.rotation.set(0,0.5,0);//prev (0, 0.5, 0)\nsolarian.position.x=-0.25;solarian.position.y=-0.5;//prev 0.7\nsolarian.scale.set(1.8,1.8,1.8);//prev (2,2,2)\n// solarian.visible = false;\ncharacterList.push(solarian);});}function mLoaded(){loadedCount++;if(loadedCount>=characterCount){renderer.domElement.style.display=\"block\";modelsLoaded=true;console.log(\"All characters loaded\");// setTimeout(() => {\n//   console.log(\"Timeout completed\");\n// }, 10000);\n// // composer.render();\n}}setupScene();// function sleep(milliseconds) {\n//   const date = Date.now();\n//   let currentDate = null;\n//   do {\n//     currentDate = Date.now();\n//   } while (currentDate - date < milliseconds);\n// }\n// console.log(\"before sleep\");\n// sleep(10000);\n// console.log(\"after sleep\");\nfunction Characters(){const character=useSelector(state=>state.characterSelect.character);const ref=useRef();useEffect(()=>{const current=ref.current;let width=current.clientWidth;// or window.innerWidth;\nlet height=current.clientHeight;// = window.innerHeight for full screen\nconst init=()=>{camera=new THREE.PerspectiveCamera(90,width/height,1,100000);camera.position.set(0,2.5,4);renderer.setSize(width,height);current.appendChild(renderer.domElement);setupPostProcessing(width,height);if(modelsLoaded===false)return;if(character===0){scene.add(rumbler);scene.remove(solarmy);scene.remove(solien);scene.remove(sunk);scene.remove(solarian);}if(character===1){scene.remove(rumbler);scene.add(solarmy);scene.remove(solien);scene.remove(sunk);scene.remove(solarian);}if(character===2){scene.remove(rumbler);scene.remove(solarmy);scene.add(solien);scene.remove(sunk);scene.remove(solarian);}if(character===3){scene.remove(rumbler);scene.remove(solarmy);scene.remove(solien);scene.add(sunk);scene.remove(solarian);}if(character===4){scene.remove(rumbler);scene.remove(solarmy);scene.remove(solien);scene.remove(sunk);scene.add(solarian);}};init();manager.onLoad=()=>{console.log(\"Calling Render\");animate();};// animate\nconst animate=function(){requestAnimationFrame(animate);// characterChange();\nif(isScrolledIntoView(doc)&&modelsLoaded){const delta=clock.getDelta();for(let i=0;i<mixers.length;i++){mixers[i].update(delta);}render();}else if(firstFrameRendered===false){const delta=clock.getDelta();for(let i=0;i<mixers.length;i++){mixers[i].update(delta);}render();}};const doc=document.getElementById('character_model');function isScrolledIntoView(el){var rect=el.getBoundingClientRect();var elemTop=rect.top;var elemBottom=rect.bottom;var isVisible=elemTop<window.innerHeight&&elemBottom>=0;return isVisible;}const render=()=>{//renderer.render(scene, camera);\ncomposer.render();if(!firstFrameRendered){firstFrameRendered=true;console.log(\"First frame rendered\");}};const handleResize=()=>{width=ref.current.clientWidth;height=ref.current.clientHeight;// height = 500;\nrenderer.setSize(width,height);camera.aspect=width/height;camera.updateProjectionMatrix();render();};//#region Old props code\n// props.store.subscribe((data) => {\n//   console.log(data.characterSelect.character);\n//   if (currentCharIndex === data.characterSelect.character) {\n//     console.log(\"Same character\");\n//     return;\n//   }\n//   for (let i = 0; i < characterList.length; i++) {\n//     characterList[i].visible = false;\n//     if (i === data.characterSelect.character) {\n//       console.log(\"Change character!\");\n//       characterList[i].visible = true;\n//       currentCharIndex = i;\n//     }\n//   }\n// });\n// const characterChange = () => {\n//   console.log(character.character);\n//   if (currentCharIndex === character.character) {\n//     console.log(\"Same character\");\n//     return;\n//   }\n//   for (let i = 0; i < characterList.length; i++) {\n//     characterList[i].visible = false;\n//     if (i === character.character) {\n//       console.log(\"Change character!\");\n//       characterList[i].visible = true;\n//       currentCharIndex = i;\n//     }\n//   }\n// };\n//#endregion\nwindow.addEventListener(\"resize\",handleResize);return()=>{// Callback to cleanup three js, cancel animationFrame, etc\nwindow.removeEventListener(\"resize\",handleResize);current.removeChild(renderer.domElement);};},[character]);// console.log(\"returned character\");\nreturn/*#__PURE__*/_jsx(\"div\",{ref:ref,className:\"Characters\"});}export default Characters;","map":{"version":3,"names":["useRef","useEffect","THREE","GLTFLoader","solarmyModel","solarmyDiffuse","solienModel","solienDiffuse","sunkModel","sunkDiffuse","rumblerModel","solarianModel","solarianDiffuse","EffectComposer","RenderPass","OutlinePass","Solarmy_metalroughness_texture","Sunk_metalroughness_texture","useSelector","jsx","_jsx","mixers","camera","manager","LoadingManager","gltfloader","textureLoader","TextureLoader","clock","Clock","renderer","WebGLRenderer","alpha","setClearColor","composer","selectedObjects","scene","characterList","solarmy","solien","sunk","rumbler","solarian","isPostProcessEnabled","characterCount","loadedCount","modelsLoaded","firstFrameRendered","setupScene","Scene","toneMapping","ReinhardToneMapping","toneMappingExposure","shadowMap","enabled","fog","Fog","background","hemiLight","HemisphereLight","position","set","multiplyScalar","dirLight","DirectionalLight","color","setHSL","d","castShadow","shadow","top","bottom","left","right","far","bias","add","spotLight","SpotLight","rimLightSize","rimPointLight","PointLight","ambientLight","AmbientLight","domElement","style","display","LoadModels","setupPostProcessing","width","height","params","edgeStrength","edgeGlow","edgeThickness","pulsePeriod","rotate","usePatternTexture","renderPass","addPass","outlinePass","Vector2","visibleEdgeColor","hiddenEdgeColor","load","object","mixer","AnimationMixer","action","clipAction","animations","play","push","traverse","child","isMesh","receiveShadow","x","y","rotation","scale","mLoaded","LoadRemainingModels","solarmyLoadManager","solarmyTexLoader","diffuseTexture","roughmetalTexture","texture","flipY","needsUpdate","encoding","sRGBEncoding","onLoad","material","roughness","metalness","metalnessMap","roughnessMap","map","name","Math","PI","sunkLoadManager","sunkTexLoader1","sunkTexLoader2","sunkRoughnessTexture","sunkDiffuseTexture","MathUtils","degToRad","diffuseMap","console","log","Characters","character","state","characterSelect","ref","current","clientWidth","clientHeight","init","PerspectiveCamera","setSize","appendChild","remove","animate","requestAnimationFrame","isScrolledIntoView","doc","delta","getDelta","i","length","update","render","document","getElementById","el","rect","getBoundingClientRect","elemTop","elemBottom","isVisible","window","innerHeight","handleResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","removeChild","className"],"sources":["D:/Others/Three js/rumbleworlds/src/components/Home/Characters/Characters.jsx"],"sourcesContent":["import { useRef, useEffect } from \"react\";\r\nimport * as THREE from \"three\";\r\n// import { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader.js\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\r\n\r\nimport solarmyModel from \"assets/home/characters/solarmy_nonTex.glb\";\r\nimport solarmyDiffuse from \"assets/home/characters/Textures/solarmy_diffuse512.png\";\r\n\r\nimport solienModel from \"assets/home/characters/solien_nonTex.glb\";\r\nimport solienDiffuse from \"assets/home/characters/Textures/solien_diffuse512.png\";\r\n\r\nimport sunkModel from \"assets/home/characters/sunk_nonTex.glb\";\r\nimport sunkDiffuse from \"assets/home/characters/Textures/sunk_diffuse512.png\";\r\n// import rumblerModel from \"assets/home/characters/rumbler.glb\";\r\n// import rumblerModel from \"assets/home/characters/rumbler_cyclops_2048.glb\";\r\n// import rumblerModel from \"assets/home/characters/rumbler_cyclops_1024.glb\";\r\n// import rumblerModel from \"assets/home/characters/rumbler_cyclops_1024_512acc.glb\";\r\nimport rumblerModel from \"assets/home/characters/rumbler_tex512.glb\"; //rumbler_cyclops_256yellow_512all.glb\r\n\r\nimport solarianModel from \"assets/home/characters/solarian_nonTex.glb\";  //solarian.glb\r\nimport solarianDiffuse from \"assets/home/characters/Textures/solarian_diffuse512.jpg\"\r\n\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\r\nimport { OutlinePass } from 'three/examples/jsm/postprocessing/OutlinePass.js';\r\n// import { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js';\r\n// import { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader.js';\r\n\r\n// import solarmy_texture from \"assets/home/characters/solarmy_texture.png\";\r\nimport Solarmy_metalroughness_texture from \"assets/home/characters/Solarmy_MetalRoughMap.png\";\r\nimport Sunk_metalroughness_texture from \"assets/home/characters/Sunk_MetalRoughness.png\";\r\n// import solien_texture from \"assets/home/characters/solien_texture.png\";\r\n// import sunk_texture from \"assets/home/characters/sunk_texture.png\";\r\nimport \"./characters.scss\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nlet mixers = [];\r\nlet camera;\r\nconst manager = new THREE.LoadingManager();\r\n// load model\r\n//const loader = new FBXLoader(manager);\r\nconst gltfloader = new GLTFLoader(manager);\r\nconst textureLoader = new THREE.TextureLoader(manager);\r\n\r\nconst clock = new THREE.Clock();\r\n\r\nconst renderer = new THREE.WebGLRenderer({ alpha: true });\r\nrenderer.setClearColor(0x000000, 0);\r\n\r\nvar composer;\r\nvar selectedObjects  = [];\r\n\r\nlet scene;\r\nlet characterList = [];\r\nlet solarmy, solien, sunk, rumbler, solarian;\r\n\r\nvar isPostProcessEnabled = false;\r\nconst characterCount = 5;\r\nvar loadedCount = 0;\r\nvar modelsLoaded = false;\r\nexport var firstFrameRendered = false;\r\n\r\nfunction setupScene(){\r\n  scene = new THREE.Scene();\r\n\r\n    //   camera.position.multiplyScalar(30);\r\n  //   camera.rotation.set(50, 0, 0);\r\n  renderer.toneMapping = THREE.ReinhardToneMapping;\r\n  renderer.toneMappingExposure = 1;\r\n  renderer.shadowMap.enabled = true;\r\n  // renderer.outputEncoding = THREE.sRGBEncoding;\r\n  // renderer.setClearColor(0xffffff, 0);\r\n  // scene.background = new THREE.Color(0x999999);\r\n  // scene.background = new THREE.Color().setHSL(0.6, 0, 1);\r\n\r\n  // document.body.appendChild( renderer.domElement );\r\n  // use ref as a mount point of the Three.js scene instead of the document.body\r\n\r\n  // add light\r\n  // scene.fog = new THREE.Fog(0xa0a0a0, 1, 2000);\r\n  scene.fog = new THREE.Fog(scene.background, 1, 20000);\r\n  const hemiLight = new THREE.HemisphereLight(0xffffff, 0x444444, 1);\r\n  hemiLight.position.set(0, 2, 0);\r\n  hemiLight.position.multiplyScalar(1000000);\r\n  // hemiLight.color.setHSL(0.6, 0.6, 0.6);\r\n  // hemiLight.groundColor.setHSL(0.095, 1, 0.75);\r\n  //scene.add(hemiLight);\r\n  // add to show light helper\r\n\r\n  const dirLight = new THREE.DirectionalLight(0xFFF6B6, 10);   //prev 1.5 in default tone mapping\r\n  dirLight.color.setHSL(0.1, 1, 0.95);\r\n  dirLight.position.multiplyScalar(30);\r\n  const d = 200;\r\n  dirLight.position.set(-2, 2, 4);   //prev (1, 2, 1)\r\n  dirLight.position.multiplyScalar(1000);\r\n  dirLight.castShadow = true;\r\n  dirLight.shadow.camera.top = d;\r\n  dirLight.shadow.camera.bottom = -d;\r\n  dirLight.shadow.camera.left = -d;\r\n  dirLight.shadow.camera.right = d;\r\n  // dirLight.shadow.camera.near = 0.1;\r\n  // dirLight.shadow.camera.far = 100;\r\n  dirLight.shadow.camera.far = 35000;\r\n  dirLight.shadow.bias = -0.0001;\r\n  scene.add(dirLight);\r\n  \r\n  const spotLight = new THREE.SpotLight( 0xaa0000 );\r\n  spotLight.position.set( -10, 10, -5 );\r\n  //scene.add( spotLight );\r\n\r\n  // const redPointLightRadius = 15;   //5\r\n  // const redpointLight = new THREE.PointLight( 0xff0000, redPointLightRadius , 40 );\r\n  // redpointLight.position.set( -7, 1, -1 );\r\n  // scene.add( redpointLight );\r\n\r\n  const rimLightSize = 30;   //8\r\n  const rimPointLight = new THREE.PointLight( 0x0033FF, rimLightSize, 40);\r\n  rimPointLight.position.set( 10, 2, 0);\r\n  scene.add( rimPointLight );\r\n\r\n  const ambientLight = new THREE.AmbientLight( 0xffffff, 0 ); // soft white light\r\n  scene.add( ambientLight );\r\n\r\n  renderer.domElement.style.display = \"none\";\r\n  // add to show light helper\r\n  // const dirLightHelper = new THREE.DirectionalLightHelper(dirLight, 10);\r\n  // scene.add(dirLightHelper);\r\n  // const groundGeo = new THREE.PlaneGeometry(100000, 100000);\r\n  // const groundMat = new THREE.MeshLambertMaterial({ color: 0xffffff });\r\n  // groundMat.color.setHSL(0.095, 1, 0.75);\r\n  // const ground = new THREE.Mesh(groundGeo, groundMat);\r\n  // ground.rotation.x = -Math.PI / 2;\r\n  // ground.receiveShadow = true;\r\n  // scene.add(ground);\r\n  LoadModels();\r\n}\r\n\r\nfunction setupPostProcessing(width, height){\r\n  if(isPostProcessEnabled){\r\n    return;\r\n  }\r\n\r\n  const params = {\r\n    edgeStrength: 5.0,  //3\r\n    edgeGlow: 0.0,  //0\r\n    edgeThickness: 1.0, //1\r\n    pulsePeriod: 0,\r\n    rotate: false,\r\n    usePatternTexture: false\r\n  };\r\n\r\n  composer = new EffectComposer( renderer );\r\n\r\n\tconst renderPass = new RenderPass( scene, camera );\r\n\tcomposer.addPass( renderPass );\r\n\r\n\tconst outlinePass = new OutlinePass( new THREE.Vector2( width, height ), scene, camera );\r\n  outlinePass.edgeStrength = params.edgeStrength;\r\n  outlinePass.edgeGlow = params.edgeGlow;\r\n  outlinePass.edgeThickness = params.edgeThickness;\r\n  outlinePass.visibleEdgeColor.set(0x000000);\r\n  outlinePass.hiddenEdgeColor.set(0x111111);\r\n  outlinePass.selectedObjects = selectedObjects;\r\n\tcomposer.addPass( outlinePass );\r\n\r\n  isPostProcessEnabled = true;\r\n}\r\n\r\nfunction LoadModels(){\r\n  \r\n  gltfloader.load(rumblerModel, function (object) {\r\n    rumbler = object.scene;\r\n    // console.log(\"rumbler loaded\");\r\n    const mixer = new THREE.AnimationMixer(rumbler);\r\n    const action = mixer.clipAction(object.animations[0]);\r\n    action.play();\r\n    mixers.push(mixer);\r\n    selectedObjects.push(rumbler);\r\n\r\n    rumbler.traverse((child) => {\r\n      if(child.isMesh){\r\n        child.castShadow = true;\r\n        child.receiveShadow = true;\r\n      }\r\n    });\r\n    // selectedObjects.traverse((obj) => {\r\n    //   console.log('traversed properly');\r\n    // })\r\n    // const tgaLoader = new TGALoader(manager);\r\n\r\n    // const texture1 = tgaLoader.load(rumbler_cyclops_base_color);\r\n    // const texture2 = tgaLoader.load(rumbler_cyclops_texture);\r\n\r\n    // rumbler.traverse(function (child) {\r\n    //   if (child.isMesh) {\r\n    //     child.castShadow = true;\r\n    //     child.receiveShadow = true;\r\n    //     child.material.map = texture1;\r\n    //     child.material.needsUpdate = true;\r\n\r\n    //     if (\r\n    //       child.name.includes(\"Metal\") ||\r\n    //       child.name.includes(\"Armor\") ||\r\n    //       child.name.includes(\"Thumb\") ||\r\n    //       child.name.includes(\"ShoulderPad\") ||\r\n    //       child.name.includes(\"Index\") ||\r\n    //       child.name.includes(\"Pinky\")\r\n    //     ) {\r\n    //       var x = child.material.clone();\r\n    //       x.map = texture2;\r\n    //       x.needsUpdate = true;\r\n    //       child.material = x;\r\n    //     }\r\n    //   }\r\n    // });\r\n\r\n    // rumbler.rotation.set(0, -50, 0);\r\n    // rumbler.rotation.set(0, 1, 0);\r\n    rumbler.position.x = -0.5;\r\n    rumbler.position.y = -1.25;\r\n    rumbler.rotation.y = 0.3;\r\n    rumbler.scale.set(13, 13, 13);  //prev 11\r\n    // rumbler.visible = false; \r\n\r\n    scene.add(rumbler);\r\n    characterList.push(rumbler);\r\n    mLoaded();\r\n  });\r\n  \r\n  LoadRemainingModels();\r\n}\r\nfunction LoadRemainingModels(){\r\n  \r\n  gltfloader.load(solarmyModel, function (object) {\r\n    solarmy = object.scene;\r\n    // console.log('solarmy loaded');\r\n    const mixer = new THREE.AnimationMixer(solarmy);\r\n    const action = mixer.clipAction(object.animations[0]);\r\n    mixers.push(mixer);\r\n    action.play();\r\n    selectedObjects.push(solarmy);\r\n\r\n    const solarmyLoadManager = new THREE.LoadingManager();\r\n    const solarmyTexLoader = new THREE.TextureLoader(solarmyLoadManager);\r\n    // const solarmyTexLoader2 = new THREE.TextureLoader(solarmyLoadManager);\r\n    var diffuseTexture, roughmetalTexture;\r\n\r\n    solarmyTexLoader.load(Solarmy_metalroughness_texture, (texture) => {\r\n      texture.flipY = false;\r\n      texture.needsUpdate = true;\r\n      roughmetalTexture = texture;\r\n    });\r\n    \r\n    solarmyTexLoader.load(solarmyDiffuse, (texture) => {\r\n      texture.flipY = false;\r\n      texture.encoding = THREE.sRGBEncoding;\r\n      texture.needsUpdate = true;\r\n      diffuseTexture = texture;\r\n    })\r\n\r\n    solarmyLoadManager.onLoad = () => {\r\n\r\n      solarmy.traverse(function (child) {\r\n        if (child.isMesh) {\r\n          child.castShadow = true;\r\n          child.receiveShadow = true;\r\n          // child.material.roughness = 0;\r\n          child.material.roughness = 0.9;\r\n          child.material.metalness = 1;\r\n          child.material.metalnessMap = roughmetalTexture;\r\n          child.material.roughnessMap = roughmetalTexture;\r\n          child.material.map = diffuseTexture;\r\n          child.material.needsUpdate = true;\r\n\r\n          // textureLoader.load(Solarmy_metalroughness_texture, (texture) => {\r\n          //   texture.flipY = false;\r\n          //   texture.needsUpdate = true;\r\n          //   child.material.metalnessMap = texture;\r\n          //   child.material.roughnessMap = texture;\r\n          //   child.material.needsUpdate = true;\r\n          // });\r\n          // textureLoader.load(solarmyDiffuse, (texture) => {\r\n          //   texture.flipY = false;\r\n          //   texture.encoding = THREE.sRGBEncoding;\r\n          //   texture.needsUpdate = true;\r\n          //   child.material.map = texture;\r\n          //   child.material.needsUpdate = true;\r\n          // })\r\n        }\r\n      });\r\n\r\n      mLoaded();\r\n    }\r\n\r\n\r\n    solarmy.position.set(-0.5, -1.5, 0);\r\n\r\n    solarmy.rotation.set(0, 0, 0);\r\n    solarmy.scale.set(3.6, 3.6, 3.6); //prev 3\r\n\r\n    solarmy.name = \"solarmy\";\r\n\r\n    characterList.push(solarmy);\r\n  });\r\n\r\n  gltfloader.load(solienModel, function (object) {\r\n    solien = object.scene;\r\n    // console.log('solien loaded');\r\n    const mixer = new THREE.AnimationMixer(solien);\r\n    const action = mixer.clipAction(object.animations[0]);\r\n    action.play();\r\n    mixers.push(mixer);\r\n    selectedObjects.push(solien);\r\n\r\n    textureLoader.load(solienDiffuse, (texture) => {\r\n      texture.flipY = false;\r\n      texture.encoding = THREE.sRGBEncoding;\r\n\r\n      solien.traverse(function (child) {\r\n        if (child.isMesh) {\r\n          child.castShadow = true;\r\n          child.receiveShadow = true;\r\n          child.material.roughness = 0.7;\r\n          child.material.metalness = 0.1;\r\n          child.material.map = texture;\r\n          child.material.needsUpdate = true;\r\n        }\r\n      });\r\n      // child.material.side = THREE.DoubleSide;\r\n      // child.material.dithering = true;\r\n      mLoaded();\r\n    });\r\n\r\n    solien.position.set(-0.5, -1.5, -0.6);  //prev (0, 0.5, -0.6)\r\n    solien.rotation.set(0, Math.PI * 0.25, 0);\r\n    solien.scale.set(2, 2, 2);    //prev (1.6, 1.6, 1.6)\r\n    // solien.visible = false;\r\n\r\n    characterList.push(solien);\r\n  });\r\n  gltfloader.load(sunkModel, function (object) {\r\n    sunk = object.scene;\r\n    // console.log('sunk loaded');\r\n    const mixer = new THREE.AnimationMixer(sunk);\r\n    const action = mixer.clipAction(object.animations[0]);\r\n    action.play();\r\n    mixers.push(mixer);\r\n    selectedObjects.push(sunk);\r\n    \r\n    const sunkLoadManager = new THREE.LoadingManager();\r\n    const sunkTexLoader1 = new THREE.TextureLoader(sunkLoadManager);\r\n    const sunkTexLoader2 = new THREE.TextureLoader(sunkLoadManager);\r\n    var sunkRoughnessTexture, sunkDiffuseTexture;\r\n\r\n    sunkTexLoader1.load(Sunk_metalroughness_texture, (texture) => {\r\n      texture.flipY = false;\r\n      texture.encoding = THREE.sRGBEncoding;\r\n      texture.needsUpdate = true;\r\n      sunkRoughnessTexture = texture;\r\n    })\r\n\r\n    sunkTexLoader2.load(sunkDiffuse, (texture) => {\r\n      texture.flipY = false;\r\n      texture.encoding = THREE.sRGBEncoding;\r\n      texture.needsUpdate = true;\r\n      sunkDiffuseTexture = texture;\r\n    })\r\n\r\n    sunkLoadManager.onLoad= () => {\r\n\r\n      sunk.traverse(function (child) {\r\n        if(child.isMesh){\r\n          child.material.roughness = 0.9;\r\n          child.material.metalness = 0.7;\r\n\r\n          child.material.metalnessMap = sunkRoughnessTexture;\r\n          child.material.roughnessMap = sunkRoughnessTexture;\r\n          child.material.map = sunkDiffuseTexture;\r\n          child.material.needsUpdate = true;\r\n\r\n          // textureLoader.load(Sunk_metalroughness_texture, (texture) => {\r\n          //   texture.flipY = false;\r\n          //   texture.needsUpdate = true;\r\n          //   child.material.metalnessMap = texture;\r\n          //   child.material.roughnessMap = texture;\r\n          //   child.material.needsUpdate = true;\r\n          // });\r\n          // textureLoader.load(sunkDiffuse, (texture) => {\r\n          //   texture.flipY = false;\r\n          //   texture.encoding = THREE.sRGBEncoding;\r\n          //   child.material.map = texture;\r\n          //   child.material.needsUpdate = true;\r\n          // })\r\n        }\r\n      });\r\n\r\n      mLoaded();\r\n    }\r\n\r\n\r\n    // sunk.rotation.set(0, -50, 0);\r\n    sunk.rotation.set(THREE.MathUtils.degToRad(5), Math.PI * 0.1, 0);\r\n    sunk.position.set( -0.5, -2.7, -1.2);   //prev (0,-0.5,-1)\r\n    const scale = 1.2;  //1.2\r\n    sunk.scale.set(scale, scale, scale);    //prev (1.2, 1.2, 1.2)\r\n    // sunk.visible = false;\r\n\r\n    characterList.push(sunk);\r\n  });\r\n  \r\n  gltfloader.load(solarianModel, function (object) {\r\n    solarian = object.scene;\r\n    const mixer = new THREE.AnimationMixer(solarian);\r\n    const action = mixer.clipAction(object.animations[0]);\r\n    action.play();\r\n    mixers.push(mixer);\r\n    selectedObjects.push(solarian);\r\n    // console.log('solarian loaded');\r\n\r\n    var diffuseMap;\r\n    textureLoader.load(solarianDiffuse, (texture) => {\r\n      texture.flipY = false;\r\n      texture.encoding = THREE.sRGBEncoding;\r\n      texture.needsUpdate = true;\r\n      diffuseMap = texture;\r\n      solarian.traverse(function (child) {\r\n        if (child.isMesh) {\r\n          child.castShadow = true;\r\n          child.receiveShadow = true;\r\n          child.material.map = diffuseMap;\r\n          child.material.roughness = 0.4;\r\n          child.material.metalness = 0.2;\r\n          child.material.needsUpdate = true;\r\n          // textureLoader.load(solarian_texture, (texture) => {\r\n          //   child.material.map = texture;\r\n          //   child.material.needsUpdate = true;\r\n          // });\r\n        }\r\n      });\r\n      mLoaded();\r\n    })\r\n\r\n\r\n    // solarian.rotation.set(0, -50, 0);\r\n    solarian.rotation.set(0, 0.5, 0);   //prev (0, 0.5, 0)\r\n    solarian.position.x = -0.25;\r\n    solarian.position.y = -0.5;  //prev 0.7\r\n    solarian.scale.set(1.8, 1.8, 1.8);  //prev (2,2,2)\r\n    // solarian.visible = false;\r\n\r\n    characterList.push(solarian);\r\n  });\r\n}\r\nfunction mLoaded(){\r\n  loadedCount++;\r\n  if(loadedCount >= characterCount){\r\n    renderer.domElement.style.display = \"block\";\r\n    modelsLoaded = true;\r\n    console.log(\"All characters loaded\");\r\n    // setTimeout(() => {\r\n\r\n    //   console.log(\"Timeout completed\");\r\n    // }, 10000);\r\n    // // composer.render();\r\n  }\r\n}\r\nsetupScene();\r\n// function sleep(milliseconds) {\r\n//   const date = Date.now();\r\n//   let currentDate = null;\r\n//   do {\r\n//     currentDate = Date.now();\r\n//   } while (currentDate - date < milliseconds);\r\n// }\r\n// console.log(\"before sleep\");\r\n// sleep(10000);\r\n// console.log(\"after sleep\");\r\n\r\nfunction Characters() {\r\n  const character = useSelector((state) => state.characterSelect.character);\r\n  const ref = useRef();\r\n  \r\n  useEffect(() => {\r\n    const current = ref.current;\r\n    let width = current.clientWidth; // or window.innerWidth;\r\n    let height = current.clientHeight; // = window.innerHeight for full screen\r\n\r\n    const init = () => {\r\n      camera = new THREE.PerspectiveCamera(90, width/ height, 1, 100000);\r\n      camera.position.set(0, 2.5, 4);\r\n      renderer.setSize(width, height);\r\n      current.appendChild(renderer.domElement);\r\n\r\n      setupPostProcessing(width, height);\r\n\r\n      if(modelsLoaded === false)\r\n        return;\r\n\r\n      if (character === 0) {\r\n        scene.add(rumbler);\r\n        scene.remove(solarmy);\r\n        scene.remove(solien);\r\n        scene.remove(sunk);\r\n        scene.remove(solarian);\r\n      }\r\n      if (character === 1) {\r\n        scene.remove(rumbler);\r\n        scene.add(solarmy);\r\n        scene.remove(solien);\r\n        scene.remove(sunk);\r\n        scene.remove(solarian);\r\n      }\r\n      if (character === 2) {\r\n        scene.remove(rumbler);\r\n        scene.remove(solarmy);\r\n        scene.add(solien);\r\n        scene.remove(sunk);\r\n        scene.remove(solarian);\r\n      }\r\n      if (character === 3) {\r\n        scene.remove(rumbler);\r\n        scene.remove(solarmy);\r\n        scene.remove(solien);\r\n        scene.add(sunk);\r\n        scene.remove(solarian);\r\n      }\r\n      if (character === 4) {\r\n        scene.remove(rumbler);\r\n        scene.remove(solarmy);\r\n        scene.remove(solien);\r\n        scene.remove(sunk);\r\n        scene.add(solarian);\r\n      }\r\n    };\r\n\r\n    init();\r\n\r\n    manager.onLoad = () => {\r\n      console.log(\"Calling Render\");\r\n      animate();\r\n    };\r\n\r\n    // animate\r\n    const animate = function () {\r\n      requestAnimationFrame(animate);\r\n      // characterChange();\r\n\r\n      if(isScrolledIntoView(doc) && modelsLoaded){\r\n        const delta = clock.getDelta();\r\n        for (let i = 0; i < mixers.length; i++) {\r\n          mixers[i].update(delta);\r\n        }\r\n        render();\r\n      }\r\n      else if(firstFrameRendered === false){\r\n        const delta = clock.getDelta();\r\n        for (let i = 0; i < mixers.length; i++) {\r\n          mixers[i].update(delta);\r\n        }\r\n        render();\r\n      }\r\n    };\r\n\r\n    const doc = document.getElementById('character_model');\r\n\r\n    function isScrolledIntoView(el) {\r\n      var rect = el.getBoundingClientRect();\r\n      var elemTop = rect.top;\r\n      var elemBottom = rect.bottom;\r\n      var isVisible = elemTop < window.innerHeight && elemBottom >= 0;\r\n      return isVisible;\r\n    }\r\n\r\n    const render = () => {\r\n      //renderer.render(scene, camera);\r\n       composer.render();\r\n      if(!firstFrameRendered){\r\n        firstFrameRendered = true;\r\n        console.log(\"First frame rendered\");\r\n      }\r\n    };\r\n\r\n    const handleResize = () => {\r\n      width = ref.current.clientWidth;\r\n      height = ref.current.clientHeight;\r\n      // height = 500;\r\n      renderer.setSize(width, height);\r\n      camera.aspect = width / height;\r\n      camera.updateProjectionMatrix();\r\n      render();\r\n    };\r\n    //#region Old props code\r\n    // props.store.subscribe((data) => {\r\n    //   console.log(data.characterSelect.character);\r\n    //   if (currentCharIndex === data.characterSelect.character) {\r\n    //     console.log(\"Same character\");\r\n    //     return;\r\n    //   }\r\n\r\n    //   for (let i = 0; i < characterList.length; i++) {\r\n    //     characterList[i].visible = false;\r\n    //     if (i === data.characterSelect.character) {\r\n    //       console.log(\"Change character!\");\r\n    //       characterList[i].visible = true;\r\n    //       currentCharIndex = i;\r\n    //     }\r\n    //   }\r\n    // });\r\n\r\n    // const characterChange = () => {\r\n    //   console.log(character.character);\r\n    //   if (currentCharIndex === character.character) {\r\n    //     console.log(\"Same character\");\r\n    //     return;\r\n    //   }\r\n    //   for (let i = 0; i < characterList.length; i++) {\r\n    //     characterList[i].visible = false;\r\n    //     if (i === character.character) {\r\n    //       console.log(\"Change character!\");\r\n    //       characterList[i].visible = true;\r\n    //       currentCharIndex = i;\r\n    //     }\r\n    //   }\r\n    // };\r\n    //#endregion\r\n    \r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      // Callback to cleanup three js, cancel animationFrame, etc\r\n\r\n      window.removeEventListener(\"resize\", handleResize);\r\n      current.removeChild(renderer.domElement);\r\n    };\r\n  }, [character]);\r\n \r\n  // console.log(\"returned character\");\r\n  return <div ref={ref} className=\"Characters\"></div>;\r\n}\r\n\r\nexport default Characters;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}